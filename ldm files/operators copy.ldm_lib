operator + (
    %precedence 8 %
    %structure binary %
    %returns left-type %
)


operator - (
    %precedence 8 %
    %structure binary %
    %returns left-type %
)

operator * (
    %precedence 9 %
    %structure binary %
    %returns left-type %
)

operator / (
    %precedence 9 %
    %structure binary %
    %returns left-type %
)

operator - (
    %precedence 10 %
    %structure unary-right %
    %returns right-type %
)

operator < (
    %precedence 5 %
    %structure binary %
    %returns type bool %
)

operator > (
    %precedence 5 %
    %structure binary %
    %returns type bool %
)

operator += (
    %precedence 1 %
    %structure binary %
    %returns none %
)

operator -= (
    %precedence 1 %
    %structure binary %
    %returns none %
)

operator <= (
    %precedence 1 %
    %structure binary %
    %returns type bool %
)

operator >= (
    %precedence 1 %
    %structure binary %
    %returns type bool %
)

operator = (
    %precedence 1 %
    %structure binary %
    %returns none %
)

operator ? (
    %precedence 1 %
    %structure custom %before(operator :) {value bool} ? {value option1}% %
    %returns var option1 %
)

operator : (
    %precedence 1 %
    %structure custom %after(operator ?) : {value option2} %
    %returns var option2 %
)
